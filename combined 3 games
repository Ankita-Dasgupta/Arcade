import random
print('''I am the linear equation monster and will
      test you on your mathematical skills, you are allowed 3
      wrong attempts and if youre wrong you will pay with your life''')
finalscore=0

def level1():
    lives=3
    rand1=0
    rand2=0
    ans1=0
    realans1=0
    realans2=0
    ans2=0
    realans3=0
    ans3=0
    rand3=0
    print("Level 1: ")
    print('''This is will test your simple addition
        skills there are three parts to this level and you need t
        o get all three in a row to pass, you only have 3 chances so
        dont make a mistake''')
    
    while lives!=0:
        rand1=random.randint(0,9)
        rand2=random.randint(0,9)
        realans1=rand1+rand2
        print(rand1,"+",rand2,"=")
        ans1=int(input())
        if realans1== ans1:
            print("That was correct, good job, but the next one is harder!")
            rand1=random.randint(0,99)
            rand2=random.randint(0,99)
            realans2=rand1+rand2
            print(rand1,"+",rand2,"=")
            ans2=int(input())
        else:
            print("that was wrong,you lose a life,try again!")
            lives=lives-1
            print("remaning lives=",lives)
            continue
        if realans2==ans2:
            print("wonderful, one more and you can go to level 2")
            rand1=random.randint(0,99)
            rand2=random.randint(0,99)
            rand3=random.randint(0,99)
            print(rand1,"+",rand2,"-",rand3,"=")
            realans3=rand1+rand2-rand3
            ans3=int(input())
        else:
             print("that was wrong, you lose a life,try again!")
             lives=lives-1
             print("remaning lives=",lives)
             continue
            
        if realans3==ans3:
               print("congrats you can move on to level 2, you have 10 points")
               global finalscore
               finalscore=10
               break
        else:
            print("that was wrong!you lose a life back to the first question")
            lives=lives-1
            print("remaning lives=",lives)
            continue
    if lives==0:
        print("game over, you get 0 points")
        
level1()


def level2():

                print('''level 2 this is a roman numeral game and on completion
                         you recive 10 points and access to level3''')

                def value(n):
                    if n == 'I':
                        return 1
                    elif n == 'V':
                        return 5
                    elif n == 'X':
                        return 10
                    elif n == 'L':
                        return 50
                    elif n == 'C':
                        return 100
                    elif n == 'D':
                        return 500
                    elif n == 'M':
                        return 1000
                    else:
                        return 0
                for var in range(1):
                    roman= "none"

                    player=random.randrange(1,1000)
                    print(player,"convert this number to roman")
                    converted=input("converted number")
                    while roman != "0":
                     roman = converted
                     if roman=="0":
                         break

                     res = 0
                     i = 0

                     while i < len(roman):
                            s1 = value(roman[i])

                            if i+1 < len(roman):
                                s2 = value(roman[i+1])

                                if s1 >= s2:
                                    res = res+s1
                                    i = i+1

                                else:
                                    res = res+(s2-s1)
                                    i = i+2
                            else:
                                res = res+s1
                                i = i+1

                     if player==res:
                         print("good job your score is now 20")
                         global finalscore
                         finalscore=20
                         break
                     else:
                         print("game over you have 10 points")

                         break

if finalscore==10:
    level2()



def level3():
    print("this is level 3 a hangman game, you have to guess the word for 10 points")
    def main():
                c=0
                def hangman():
                    import random
                    '''
                    f = open("t1.txt")
                    # need to import text file onto git?
                    word_list = f.readlines()
                    '''
                    word_list=["School", "Pencil", "Toys", "Notebook"]
                    choice = random.choice(word_list)
                    choice_upper = choice.upper()

                    guessed = False
                    guessed_letters = []
                    guessed_words = []
                    tries = 6
                    print("Ready to play Hangman round", c+1, "?")

                    def hangman_display(tries):
                        stages = [  # final state: head, torso, both arms, and both legs
                            """
                               --------
                               |      |
                               |      O
                               |     \\|/
                               |      |
                               |     / \\
                               -
                            """,
                            # head, torso, both arms, and one leg
                            """
                               --------
                               |      |
                               |      O
                               |     \\|/
                               |      |
                               |     / 
                               -
                            """,
                            # head, torso, and both arms
                            """
                               --------
                               |      |
                               |      O
                               |     \\|/
                               |      |
                               |      
                               -
                            """,
                            # head, torso, and one arm
                            """
                               --------
                               |      |
                               |      O
                               |     \\|
                               |      |
                               |     
                               -
                            """,
                            # head and torso
                            """
                               --------
                               |      |
                               |      O
                               |      |
                               |      |
                               |     
                               -
                            """,
                            # head
                            """
                               --------
                               |      |
                               |      O
                               |    
                               |      
                               |     
                               -
                            """,
                            # initial empty state
                            """
                               --------
                               |      |
                               |      
                               |    
                               |      
                               |     
                               -
                            """
                        ]
                        return stages[tries]

                    underscores = "_" * len(choice_upper)

                    print(hangman_display(tries))
                    print("_ " * len(choice_upper))
                    underscore_change = list(underscores)
                    while not guessed and tries > 0:
                        guess = input("Enter a letter or a word ")  # user guess
                        guess_upper = guess.upper()  # guess in upper to prevent errors

                        if len(guess) == 1 and guess_upper.isalpha():  # if letter
                            '''
                            error handling if guess length is 1 it is a digit 
                            or alpha and isalpha checks for simply alpha
                            '''

                            if guess_upper in guessed_letters:
                                print("you have already guessed this letter")

                            elif guess_upper not in choice_upper:
                                tries = tries - 1
                                guessed_letters.append(guess_upper)
                                print('"{}"'.format(guess), "is not in the word")

                            else:  # final option- correct guess
                                print("good job", guess_upper, "is in word")
                                guessed_letters.append(guess_upper)


                                placeholder = []
                                index=-1
                                for i in choice_upper:
                                    index=index+1
                                    if guess_upper == i:
                                        placeholder.append(guess_upper)
                                    else:
                                        placeholder.append(underscore_change[index])

                                underscores = ' '.join(placeholder)
                                print(underscores)
                                underscore_change = placeholder
                                if placeholder  == list(choice_upper) :
                                        guessed = True



                       ## I have to change this logic , loop will never end otherwise



                        elif len(guess) > 1 and guess.isalpha():
                            if guess_upper in guessed_words:
                                print("you already guessed that word!")

                            elif guess_upper != choice_upper:
                                print(guess, "is not the word")
                                guessed_words.append(guess.upper())
                                tries = tries - 1
                            else:
                                guessed = True
                                underscores = choice_upper
                            #underscores = ' '.join(placeholder)
                            print(" ".join(underscores))
                        else:
                            tries = tries -1
                            print("Not a valid answer")


                        if guessed==True:
                            print("Congrats you completed round ", c+1)
                            print("Well done you won!")
                            break
                        else:
                            print("you have", tries, "tries left")
                            print(hangman_display(tries))


                    # guess over display where the user is at right now
                    if guessed==False:
                        print("you lost this round!")

                while c<3:
                    hangman()
                    c=c+1
                else:
                    print("you got 10 points","your socre now is=",finalscore=30)
                    global finalscore
                    finalscore=30
                    
    main()
if finalscore==20:
    level3()
else:
    print(finalscore)






























    
    

    
    
